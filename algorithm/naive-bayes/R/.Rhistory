x <- FALSE
x <- 1
x <- 11.23
x <- 11.23
x
x <- 0L
x <- 12121L
x <- "asasas"
x <- "asasasas"
x <- 1+2i
x <- 2i
x <- charToRaw("asasasas")
x <- charToRaw("as")
y <- c(61, 73)
ncol(x)
ncol(y)
length(x)
length(y)
charToRaw()
help("charToRow")
help("charToRaw")
class(TRUE)
# numeric 数值
class(1)
# integer 整数
class(1L)
# character 字符
class("character")
# complex 复数
class(1+2i)
v <- c(1, 2, 3, 4)
length(v)
attributes(v)
v <- vector("character", length = 10)
dim(v)
help("vector")
mode(v)
class(v)
v <- 1:4
names(v) <- c("a", "b", "c", "d")
v
dim(v)
v <- 1:4
# 向量名称
names(v) <- c("a", "b", "c", "d")
# 向量类型
class(v)
# 向量长度
length(v)
v
names
class
length
vector
names(v)
length(v) <- 10
length(v)
v
class(v) <- "numeric"
v
class(v)
v
class(v) <- "character"
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
help("matrix")
m <- matrix(1:6, nrow = 3, ncol = 2, byrow = TRUE, dimnames = list(c("1行", "2行", "3行"), c("1列", "2列")))
attributes(m)
print(rbind(matrix(1:6, nrow = 2, ncol = 3), matrix(7:12, nrow = 2, ncol = 3)))
print(cbind(matrix(1:6, nrow = 2, ncol = 3), matrix(7:12, nrow = 2, ncol = 3)))
m <- matrix(1:6, nrow = 3, ncol = 2, byrow = TRUE, dimnames = list(c("1行", "2行", "3行"), c("1列", "2列")))
m
m
dimnames(m)
class(m)
dim(m)
nrow(m)
ncol(m)
attributes(m)
m <- c(1:6)
m
dim(m) <- c(2, 3)
View(m)
a <- array(1:24, dim = c(3, 4, 2))
class(a)
dim(a)
length(a)
help("array")
a <- array(1:8, dim = c(2, 2, 2))
a
dimnames(a) <- list(c("1", "2"), c("1", "2"), c("1", "2"))
a
dimnames(a) <- list(c("一维1", "一维2"), c("二维1", "二维2"), c("三维1", "三维2"))
a
attributes(a)
d <- date()
d <- date()
class(d)
d <- Sys.Date()
class(d)
d <- as.Date("2017-01-01")
weekdays(d)
years(d)
quarters(d)
months(d)
d <- as.Date("2017-06-01")
quarters(d)
months(d)
d <- Sys.Date()
quarters(d)
months(d)
weekdays(d)
julian(d)
class(julian(d))
d1 <- as.Date("2016-01-01")
d2 <- as.Date("2016-06-01")
class(d2 - d1)
as.numeric(d2 - d1)
t <- Sys.time()
class(t)
t <- Sys.time()
class(t)
t
t <- as.POSIXlt(t)
class(t)
t
t <- Sys.time()
class(t)
t <- as.POSIXlt(t)
class(t)
names(unclass(t))
t$year
t$sec
t <- strptime("Jan 1, 2016 01:01", "%B %d, %Y %H:%M")
strptime("Jan 1, 2016 01:01", "%B %d, %Y %H:%M")
strptime("Jan 1, 2016 01:01", "%B %d, %Y %H:%M")
help("strptime")
x <- 1:10
x[1]
x[2]
x[10]
x[11]
x[10]
x[1:5]
x[1:-1]
x[1:11]
x[1:100]
x[1:1000]
x[:5]
x[5:]
x[5]
x[x > 6]
x[x>5]
x[x > 5]
x[x > 5 && x < 8]
x > 5
x[x < 8]
x[x > 5 && x < 8]
x[x > 5 & x < 8]
x[x > 5 & x < 8]
x[x < 4 & x > 9]
x[x < 4 | x > 9]
x[ !x < 4]
x[!(x < 4)]
x[!(x < 4)]
x <- 1:4
names(x) <- c("a", "b", "c", "d")
x
x$a
x
x[a]
x
x["a"]
x["b"]
x["c"]
x["d"]
x["e"]
d <- matrix(1:6, nrow = 2, ncol = 3)
d
d
d[1,1]
d[1,2]
d[1,3]
d[1,4]
d[1,3]
d[2,3]
d[3,3]
d[2,3]
d[1]
d[1,]
d[2,]
d[,1]
d[,2]
d[,3]
d[1,c(1,3)]
d
d[1,c(1,3)]
class(d[1,2])
class(d[1,])
d[1,2]
d[1,2,drop = false]
d[1,2,drop = FALSE]
d[1,2,drop = FALSE]
d[1,,drop = FALSE]
d[1,,drop = FALSE]
v <- 1:4
v[1]
v[c(1)]
v[c(1,3)]
v[c(1,3,4)]
v[1:1]
v[1]
v[2]
v[3]
help("[]")
help("[")
x$1
x
v$1
v
v
v
names(v) <- c("a", "b", "c", "d")
v
v$a
v
v[a]
v["a"]
v["a"]
v$a
getElement(v, 1)
getElement(v, 2)
getElement(v, 3)
getElement(v, "a")
getElement(v, "b")
v[]
v[]
v[NULL]
v[NA]
v[NA]
v[NaN]
v[NULL]
v[]
v
v[]
as.integer("a")
as.integer("1")
as.integer(1)
v[c(-1)]
v[c(-2)]
v[c(-3)]
v[c(-4)]
v[c(-1, -4)]
l <- list(id = 1:4, height = 175, gender = "male")
l[1]
l["id"]
l[[1]]
l[["id"]]
l[["id"]]
a <- l[1]
a
x$id
l$id
l[c(1,3)]
y <- "id"
x[[y]]
x[y
x[y
x[y]
l[y]
l[[y]]
l$y
l$id
l$height
l[1]
l <- list(a = list(1, 2, 3, 4), b = c("Monday", "Tuesday"))
l
l[[1]]
l[[1]][[2]]
l[[1]][2]
l[[c(1,3)]]
l[[c(2,2)]]
l <- list(name = 1)
l
l$name
l$n
l[["n", exact = FALSE]]
l[["n"]]
help("read.ftable")
help("read.csv")
naiveBayes
heml(naiveBayes)
help(naiveBayes)
??naiveBayes
library(e1071)
install.packages(e1071)
install.packages("e1071)
\
e
quit9)
quit()
diabtes
diabtes~
;
library(e1071)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
setwd("/Users/txazo/TxazoProject/Machine-Learning/algorithm/naive-bayes/R")
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
names(dataSet)
help(naiveBayes)
data(HouseVotes84, package = "mlbench")
install.packages("mlbench")
data(HouseVotes84, package = "mlbench")
HouseVotes84
Class ~ .
Class ~ .
Class ~ .
Class ~ .
Class ~ .
a <- Class ~ .
a
HouseVotes84[1:10,]
dataSet[1:3, ]
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
# classifier <- naiveBayes(trainDataSet[,c(1:8)], trainDataSet[,9])
classifier <- naiveBayes(V9 ~ ., data = trainDataSet)
pred <- predict(classifier, testDataSet)
table(pred, testDataSet$Class)
a <- table(pred, testDataSet$Class)
a
a
a
a
a
a[1]
HouseVotes84
class(HouseVotes84)
data(Titanic)
Titanic
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
classifier <- naiveBayes(trainDataSet[,-9], trainDataSet[,9])
pred <- predict(classifier, testDataSet)
pred
table(pred, testDataSet[,5])
table(pred, testDataSet[,5])
table(pred, testDataSet[,5])
table(pred, testDataSet[,5])
table(pred, testDataSet[,9])
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
classifier <- naiveBayes(trainDataSet[,-9], trainDataSet[,9])
pred <- predict(classifier, testDataSet[,-9])
table(pred, testDataSet[,9])
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
class(trainDataSet)
class(testDataSet)
class(trainDataSet[,-9])
class(trainDataSet[,9])
data(HouseVotes84, package = "mlbench")
model <- naiveBayes(Class ~ ., data = HouseVotes84)
predict(model, HouseVotes84[1:10,])
predict(model, HouseVotes84[1:10,], type = "raw")
pred <- predict(model, HouseVotes84)
table(pred, HouseVotes84$Class)
## using laplace smoothing:
model <- naiveBayes(Class ~ ., data = HouseVotes84, laplace = 3)
pred <- predict(model, HouseVotes84[,-1])
table(pred, HouseVotes84$Class)
data(HouseVotes84, package = "mlbench")
HouseVotes84
View(HouseVotes84)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
View(dataSet)
names(dataSet) <- c('V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'Class')
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
View(testDataSet)
View(trainDataSet)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
names(dataSet) <- c('V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'Class')
length <- nrow(dataSet)
trainDataSet <- dataSet[1:500,]
testDataSet <- dataSet[501:length,]
model <- naiveBayes(Class ~ ., data = trainDataSet)
pred <- predict(model, testDataSet)
table(pred, testDataSet$Class)
data(Titanic)
class(Titanic)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
class(dataSet)
data(HouseVotes84, package = "mlbench")
HouseVotes84
HouseVotes84
data(HouseVotes84, package = "mlbench")
class(HouseVotes84)
ncol(HouseVotes84)
nrow(HouseVotes84)
names(HouseVotes84)
dims(HouseVotes84)
attrs(HouseVotes84)
attr(HouseVotes84)
attributes(HouseVotes84)
model <- naiveBayes(Class ~ ., data = HouseVotes84)
pred <- predict(model, HouseVotes84)
pred
HouseVotes84$Class
table(pred, HouseVotes84$Class)
library(e1071)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
names(dataSet) <- c('V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'Class')
dataSet
attributes(library(e1071)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
names(dataSet) <- c('V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'Class'))
attributes(dataSet)
model <- naiveBayes(Class ~ ., data = dataSet)
model
pred <- predict(model, dataSet)
pred
table(pred, testDataSet$Class)
table(pred, dataSet$Class)
table(pred, dataSet$Class)
data(HouseVotes84, package = "mlbench")
model <- naiveBayes(Class ~ ., data = HouseVotes84)
pred <- predict(model, HouseVotes84)
table(pred, HouseVotes84$Class)
data(HouseVotes84, package = "mlbench")
model <- naiveBayes(Class ~ ., data = HouseVotes84)
pred <- predict(model, HouseVotes84)
table(pred, HouseVotes84$Class)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
names(dataSet) <- c('V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'Class')
model <- naiveBayes(Class ~ ., data = dataSet)
pred <- predict(model, dataSet)
table(pred, dataSet$Class)
View(HouseVotes84)
View(dataSet)
View(HouseVotes84)
View(dataSet)
class(dataSet)
classs(HouseVotes84)
class(HouseVotes84)
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
help("read.csv")
data(iris)
m <- naiveBayes(iris[,-5], iris[,5])
table(predict(m, iris), iris[,5])
iris
class(iris)
dataSet
dataSet <- read.csv("pima-indians-diabetes.csv", header = FALSE)
model <- naiveBayes(dataSet[,-9], dataSet[,9])
table(predict(model, dataSet), dataSet[,9])
dataSet <- read.csv("pima-indians-diabetes.csv")
model <- naiveBayes(dataSet[,-9], dataSet[,9])
table(predict(model, dataSet), dataSet[,9])
dataSet <- read.csv("test.csv")
model <- naiveBayes(dataSet[,-3], dataSet[,3])
table(predict(model, dataSet), dataSet[,3])
dataSet <- data.frame(
v1 = c(1,1,2),
v2 = c(1,2,1),
v3 = c(2,1,1)
)
model <- naiveBayes(dataSet[,-3], dataSet[,3])
table(predict(model, dataSet), dataSet[,3])
dataSet <- data.frame(
v1 = c(1,1,2),
v2 = c(1,2,1),
v3 = c(2,1,1)
)
dataSet
dataSet[,-3]
dataSet[,3]
model <- naiveBayes(dataSet[,-3], dataSet[,3])
table(predict(model, dataSet), dataSet[,3])
data(iris)
iris
data(iris)
m <- naiveBayes(iris[,-5], iris[,5])
table(predict(m, iris), iris[,5])
